---
title: Register of correspondence tests
url: "/cortest"
author: " "
slug: cortest
ShowToc: false
TocOpen: false
draft: false
ShowReadingTime: false
ShowShareButtons: false
ShowPostNavLinks: false
---

```{r setup, echo = FALSE, include = FALSE}
library(tidyverse)
library(readxl)
library(knitr)
library(kableExtra)
library(ggplot2)

githubURL <- ("https://raw.githubusercontent.com/lglip/louislippens/main/data/corregisterv6.RDS")
download.file(githubURL, "corregisterv6.RDS", method="curl")
data <- readRDS("corregisterv6.RDS")
file.remove("corregisterv6.RDS")

data$year <- as.numeric(data$year)
```

(intro).

### Analysis

```{r analysis trend, echo = FALSE, warning = FALSE}
general <- data %>%
  select(year) %>%
  group_by(year) %>%
  summarise(freq = n(), .groups = "keep") %>%
  drop_na() %>%
  ungroup()

general %>%
  filter(year <= 2020) %>%
  ggplot(aes(x = year, y = freq)) +
  geom_line(color = "#1E64C8", size = 1.2, alpha = 0.8) +
  geom_point(color = "#1E64C8", shape = "square", size = 1.5) +
  scale_x_continuous(limits = c(2005, 2020)) +
  theme_minimal() +
  theme(text = element_text(family = "UGent Panno Text"),
        panel.grid.minor = element_blank(),
        panel.spacing.y=unit(1.5, "lines")) +
  labs(title = "Trend in the number of correspondence tests",
       x = "Year", y = "Count")
```

```{r analysis ground, echo = FALSE, warning = FALSE, fig.height = 8}
long_yg <- data %>%
  select(year, ground) %>%
  group_by(ground, year) %>%
  summarise(freq = n(), .groups = "keep") %>%
  drop_na() %>%
  ungroup()

years <- rep(min(long_yg$year):max(long_yg$year), long_yg$ground %>% unique %>% length())
grounds <- rep(long_yg$ground %>% unique, long_yg$year %>% unique %>% length())

frame_yg <- tibble(year = years %>% sort(),
                   ground = grounds)

long_yg <- left_join(frame_yg, long_yg, by = c("year", "ground"))
long_yg$freq[is.na(long_yg$freq)] <- 0 #Plugging in zeros instead of NAs

bar_yg <- long_yg %>%
  group_by(ground) %>%
  filter(sum(freq) >= 2) %>% #Retaining grounds with at least 2 observations
  ungroup()

bar_yg <- bar_yg %>%
  mutate(ground2 = ground)
bar_yg %>%
  filter(year <= 2020) %>%
  ggplot(aes(x = year, y = freq)) +
  geom_line(data = bar_yg %>% select(-ground),
            aes(group = ground2), color = "grey", size = 0.6, alpha = 0.5) +
  geom_line(aes(color = ground), color = "#1E64C8", size = 1.2, alpha = 0.8) +
  geom_point(color = "#1E64C8", shape = "square", size = 1.5) +
  scale_y_continuous(limits = c(0, max(bar_yg$freq)+2)) +
  scale_x_continuous(limits = c(2005, 2020)) +
  facet_wrap(~ground, ncol = 2,
             scales = "free") +
  theme_minimal() +
  theme(text = element_text(family = "UGent Panno Text"),
        panel.grid.minor = element_blank(),
        panel.spacing.y=unit(1.5, "lines")) +
  labs(title = "Trend in the number of correspondence tests by discrimination ground",
       x = "Year", y = "Count")
```

```{r analysic country, echo = FALSE, warning = FALSE, fig.height = 8}
long_yc <- data %>%
  mutate(country = case_when(str_detect(country_of_analysis, "cross-national") ~ "Cross-national",
                             !str_detect(country_of_analysis, "cross-national") ~ country_of_analysis)) %>%
  select(year, country) %>%
  group_by(country, year) %>%
  summarise(freq = n(), .groups = "keep") %>%
  drop_na() %>%
  ungroup()

years <- rep(min(long_yc$year):max(long_yc$year), long_yc$country %>% unique %>% length())
countries <- rep(long_yc$country %>% unique, long_yc$year %>% unique %>% length())

frame_yc <- tibble(year = years %>% sort(),
                   country = countries)

long_yc <- left_join(frame_yc, long_yc, by = c("year", "country"))
long_yc$freq[is.na(long_yc$freq)] <- 0

bar_yc <- long_yc %>%
  group_by(country) %>%
  filter(sum(freq) >= 5) %>% #Retaining grounds with at least 5 observations
  ungroup()

bar_yc <- bar_yc %>%
  mutate(country2 = country)
bar_yc %>%
  filter(year <= 2020) %>%
  ggplot(aes(x = year, y = freq)) +
  geom_line(data = bar_yc %>% select(-country),
            aes(group = country2), color = "grey", size = 0.6, alpha = 0.5) +
  geom_line(aes(color = country), color = "#1E64C8", size = 1.2, alpha = 0.8) +
  geom_point(color = "#1E64C8", shape = "square", size = 1.5) +
  scale_y_continuous(limits = c(0, max(bar_yg$freq)+2)) +
  scale_x_continuous(limits = c(2005, 2020)) +
  facet_wrap(~country, ncol = 2,
             scales = "free") +
  theme_minimal() +
  theme(text = element_text(family = "UGent Panno Text"),
        panel.grid.minor = element_blank(),
        panel.spacing.y = unit(1.5, "lines")) +
  labs(title = "Trend in the number of correspondence tests by country",
       x = "Year", y = "Count")
```

### The register

```{r kable, echo = FALSE}
table <- data %>% select(-ground_number, -ground, -authors, -effect_category)
names(table) <- c("Treatment Group", "Control Group", "Country of Analysis", "Study", "Year", "Effect", "url")

table <- table %>% #Adding links to the studies
  mutate(Study = paste0('<a href="', url, '" target="_blank">', Study, '</a>')) %>%
  select(-url)

grounds <- data$ground %>% unique

table %>%
  kable(format = "html", escape = FALSE) %>% #Escape option is vital to make links work
  kable_styling(font_size = 12) %>%
  #column_spec(5, monospace = TRUE) %>% #this should be defined before collapse_*
  collapse_rows(c(1:3), valign = "top", target = 1) %>%
  group_rows(index = c("Race and national origin" = nrow(data %>% filter(ground == grounds[1])),
                      "Gender and motherhood" = nrow(data %>% filter(ground == grounds[2])),
                      "Religion" = nrow(data %>% filter(ground == grounds[3])),
                      "Disability" = nrow(data %>% filter(ground == grounds[4])),
                      "Age" = nrow(data %>% filter(ground == grounds[5])),
                      "Military service or affiliation" = nrow(data %>% filter(ground == grounds[6])),
                      "Wealth" = nrow(data %>% filter(ground == grounds[7])),
                      "Genetic information & Citizenship status" =
                        nrow(data %>% filter(ground == grounds[8])) + nrow(data %>% filter(ground == grounds[9])),
                      "Marital status" = nrow(data %>% filter(ground == grounds[10])),
                      "Sexual orientation" = nrow(data %>% filter(ground == grounds[11])),
                      "Political orientation" = nrow(data %>% filter(ground == grounds[12])),
                      "Union affiliation" = nrow(data %>% filter(ground == grounds[13])),
                      "Physical appearance" = nrow(data %>% filter(ground == grounds[14]))),
             indent = FALSE)
```

<br></br>
_This page was last updated `r Sys.Date()`._